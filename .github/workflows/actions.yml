name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  checks:
    strategy:
      matrix:
        python-version: ['3.8', '3.9' ]

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      id: python-version
      uses: actions/setup-python@v2
      with:
        python-version:  ${{ matrix.python-version }}

    - name: Install dependencies
      id: dependencies
      if: always()
      run: |
        python -m pip install --upgrade pip
        pip install wemake-python-styleguide flake8-html lxml mypy
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      id: flake8
      if: always()
      run: |
        flake8 . --format=html --htmldir output

    - name: mypy
      id: mypy
      if: always()
      run: |
         mypy .

    - name: send message
      uses: appleboy/telegram-action@master
      if: failure()
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: "
          Project: ${{ github.repository }}
          
          Author: ${{ github.actor }}\n
          Commit: ${{ github.sha }}\n
          Pipeline finished with error.\n
          Python ${{ matrix.python-version }}\n
          Steps details - ${{ toJson(steps) }}\n
        "

#  send_successfully_message:
#    runs-on: ubuntu-latest
#    needs: checks
#    if: success()
#    steps:
#      - name: send message
#        uses: appleboy/telegram-action@master
#        with:
#          to: ${{ secrets.TELEGRAM_TO }}
#          token: ${{ secrets.TELEGRAM_TOKEN }}
#          message: "
#          ${{ github.repository }}:
#          Pipeline for ${{ github.sha }}
#          finished successfully!"
#
#  send_unsuccessfully_message:
#    runs-on: ubuntu-latest
#    needs: checks
#    if: failure()
#    steps:
#      - name: send message
#        uses: appleboy/telegram-action@master
#        with:
#          to: ${{ secrets.TELEGRAM_TO }}
#          token: ${{ secrets.TELEGRAM_TOKEN }}
#          message: "
#          Project: ${{ github.repository }}\n
#          Author: ${{ github.actor }}\n
#          Commit: ${{ github.sha }}\n
#
#          Pipeline finished with error.\n
#
#          ${{ job.status }}
#          "