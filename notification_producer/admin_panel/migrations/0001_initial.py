# Generated by Django 3.2 on 2023-06-16 14:04

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('slug', models.SlugField(help_text='set slug', unique=True, verbose_name='slug')),
                ('password', models.CharField(help_text='set password', max_length=128, verbose_name='password')),
            ],
            options={
                'verbose_name': ('Application',),
                'verbose_name_plural': ('Applications',),
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated_at')),
                ('type', models.CharField(choices=[('mail', 'mail'), ('regular_mail', 'regular_mail')], help_text='Select notification type', max_length=40, verbose_name='notification_type')),
                ('is_express', models.BooleanField(default=False, help_text='Choose if you need to notify everyone urgently', verbose_name='Field indicating the urgency of the notification')),
                ('text', models.TextField(help_text='Text notification', max_length=400, verbose_name='Text notification')),
                ('title', models.CharField(help_text='Notice title', max_length=100, verbose_name='Notice title')),
                ('content_id', models.UUIDField(help_text='set content id', null=True, verbose_name='content id')),
                ('author', models.ForeignKey(blank=True, help_text='The administrator who created the notification', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='The administrator who created the notification')),
            ],
            options={
                'verbose_name': 'notification',
                'verbose_name_plural': 'notifications',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='UsersUnsubscribe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('user_id', models.UUIDField(help_text='set user', null=True, unique=True, verbose_name='user')),
            ],
            options={
                'verbose_name': ('Opting out of receiving user mailings',),
                'verbose_name_plural': ('Opting out of receiving user mailings',),
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='UsersNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated_at')),
                ('user_id', models.UUIDField(help_text='set user id', null=True, verbose_name='user id')),
                ('email', models.EmailField(blank=True, help_text='Mail for sending notifications', max_length=254, null=True, verbose_name='Mail for sending notifications')),
                ('is_user_subscribed', models.BooleanField(default=True, help_text='A field indicating whether the user is subscribed to the mailing list', verbose_name='A field indicating whether the user is subscribed to the mailing list')),
                ('is_sent_to_queue', models.BooleanField(default=True, verbose_name='A field indicating whether the notifications is queued for sending')),
                ('notification', models.ForeignKey(help_text='set notification', on_delete=django.db.models.deletion.DO_NOTHING, related_name='users_notifications', to='admin_panel.notification', verbose_name='notification')),
            ],
            options={
                'verbose_name': 'users notification',
                'verbose_name_plural': 'users notifications',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationFrequency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated_at')),
                ('slug', models.SlugField(help_text='Unique notification title', max_length=40, verbose_name='Unique notification title')),
                ('frequency', models.PositiveIntegerField(help_text='Notification frequency in seconds', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Notification frequency in seconds')),
                ('users_ids', models.TextField(help_text='List of uuid users to send notifications', verbose_name='List of uuid users to send notifications')),
                ('notification', models.ForeignKey(help_text='set notification', on_delete=django.db.models.deletion.DO_NOTHING, related_name='frequency', to='admin_panel.notification', verbose_name='notification')),
            ],
            options={
                'verbose_name': 'notification frequency',
                'verbose_name_plural': 'notifications frequencies',
                'ordering': ['created_at'],
            },
        ),
    ]
