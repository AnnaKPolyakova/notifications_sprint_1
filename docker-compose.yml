version: '3.8'

services:
#  rabbitmq:
#    image: rabbitmq:3.11.13-management
#    container_name: rabbitmq
#    ports:
#      - "5672:5672"
#      - "15672:15672"
#    environment:
#      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
#      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
#    env_file:
#      - .env
#    volumes:
#      - ./rabbitmq_data/data:/var/lib/rabbitmq
#    networks:
#      - moves_network

#  db:
#    image: postgres:12.4
#    container_name: db
#    volumes:
#      - postgres_data:/var/lib/postgresql/data/
#      - ./db_sql_copy:/docker-entrypoint-initdb.d
#    env_file:
#      - ./.env
#    healthcheck:
#      test: "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"
#      timeout: 2s
#      retries: 30
#    ports:
#      - 5432:5432
#    networks:
#      - moves_network

#  celery:
#    build: .
#    restart: always
#    command: >
#      sh -c "cd notification_producer &&
#      celery -A schedule.celery_app worker -l info"
#    depends_on:
#      - producer
#      - redis
#    networks:
#      - moves_network
#
#  celery-beat:
#    build: .
#    restart: always
#    command: >
#      sh -c "cd notification_producer &&
#      celery -A schedule.celery_app beat -l info"
#    volumes:
#      - .:/app
#    depends_on:
#      - producer
#      - db
#      - redis
#    networks:
#      - moves_network
#
#  redis:
#    image: redis
#    restart: always
#    volumes:
#      - ./storage/redis/data:/data
#    ports:
#      - 6379:6379
#    depends_on:
#      - db
#    networks:
#      - moves_network

#  producer:
#    build: .
#    restart: always
#    container_name: producer
#    volumes:
#      - static_value:/app/notification_producer/static/
#      - media_value:/app/notification_producer/media/
#    depends_on:
#      - redis
#      - db
#    env_file:
#      - .env
#    command: >
#      sh -c "cd notification_producer &&
#      ./manage.py migrate &&
#      ./manage.py collectstatic --no-input &&
#      python -m admin_panel.set_queues &&
#      gunicorn config.wsgi:application --bind 0.0.0.0:8004 --reload"
#    networks:
#      - moves_network
#  nginx:
#    image: nginx:1.21.3-alpine
#    ports:
#      - "8004:8004"
#    volumes:
#      - ./notification_producer/nginx/default.conf:/etc/nginx/conf.d/default.conf
#      - static_value:/var/html/static/
#      - media_value:/var/html/media/
#    depends_on:
#      - producer
#      - redis
#    networks:
#      - moves_network


  notification_consumer:
    build: .
    restart: always
    container_name: notification_consumer
    env_file:
      - .env
    command: python -m notification_consumer.consumer
    networks:
      - moves_network


networks:
  moves_network:
    name: moves_network
    external: true

volumes:
  postgres_data:
  static_value:
  media_value: